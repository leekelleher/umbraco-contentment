// This file is auto-generated by @hey-api/openapi-ts

export type ConfigurationEditorItemRequestModel = {
    key?: string | null;
    value?: {
        [key: string]: unknown;
    } | null;
};

export type DataListConfigurationRequestModel = {
    alias?: string | null;
    dataSource?: ConfigurationEditorItemRequestModel | null;
    id?: string | null;
    listEditor?: ConfigurationEditorItemRequestModel | null;
    variant?: string | null;
};

export type DataListEditorResponseModel = {
    propertyEditorUiAlias?: string | null;
    config?: Array<DataTypePropertyPresentationModel> | null;
};

export type DataListItem = {
    description?: string | null;
    disabled: boolean;
    group?: string | null;
    icon?: string | null;
    name?: string | null;
    value?: string | null;
    [key: string]: unknown | (string | null) | boolean | (string | null) | (string | null) | (string | null) | (string | null) | undefined;
};

export type DataPickerEditorRequestModel = {
    alias?: string | null;
    dataSource?: ConfigurationEditorItemRequestModel | null;
    dataTypeKey: string;
    displayMode?: ConfigurationEditorItemRequestModel | null;
    id: string;
    values?: Array<string> | null;
    variant?: string | null;
};

export type DataPickerEditorResponseModel = {
    propertyEditorUiAlias?: string | null;
    config?: Array<DataTypePropertyPresentationModel> | null;
};

export type DataTypePropertyPresentationModel = {
    alias: string;
    value?: unknown;
};

export enum EventMessageTypeModel {
    DEFAULT = 'Default',
    INFO = 'Info',
    ERROR = 'Error',
    SUCCESS = 'Success',
    WARNING = 'Warning'
}

export type NotificationHeaderModel = {
    message: string;
    category: string;
    type: EventMessageTypeModel;
};

export type PagedModelDataListItemModel = {
    items: Array<DataListItem>;
    total: number;
};

export type ProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    [key: string]: unknown | (string | null) | (string | null) | (number | null) | (string | null) | (string | null) | undefined;
};

export type PostDataListEditorData = {
    body?: DataListConfigurationRequestModel;
    path?: never;
    query?: never;
    url: '/umbraco/management/api/v1/contentment/data-list/editor';
};

export type PostDataListEditorErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type PostDataListEditorError = PostDataListEditorErrors[keyof PostDataListEditorErrors];

export type PostDataListEditorResponses = {
    /**
     * OK
     */
    200: DataListEditorResponseModel;
};

export type PostDataListEditorResponse = PostDataListEditorResponses[keyof PostDataListEditorResponses];

export type PostDataPickerEditorData = {
    body?: DataPickerEditorRequestModel;
    path?: never;
    query?: never;
    url: '/umbraco/management/api/v1/contentment/data-picker/editor';
};

export type PostDataPickerEditorErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type PostDataPickerEditorError = PostDataPickerEditorErrors[keyof PostDataPickerEditorErrors];

export type PostDataPickerEditorResponses = {
    /**
     * OK
     */
    200: DataPickerEditorResponseModel;
};

export type PostDataPickerEditorResponse = PostDataPickerEditorResponses[keyof PostDataPickerEditorResponses];

export type GetDataPickerSearchData = {
    body?: never;
    path?: never;
    query?: {
        id?: string;
        dataTypeKey?: string;
        pageNumber?: number;
        pageSize?: number;
        query?: string;
        alias?: string;
        variant?: string;
    };
    url: '/umbraco/management/api/v1/contentment/data-picker/search';
};

export type GetDataPickerSearchErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetDataPickerSearchError = GetDataPickerSearchErrors[keyof GetDataPickerSearchErrors];

export type GetDataPickerSearchResponses = {
    /**
     * OK
     */
    200: PagedModelDataListItemModel;
};

export type GetDataPickerSearchResponse = GetDataPickerSearchResponses[keyof GetDataPickerSearchResponses];

export type GetAssembliesDataData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/umbraco/management/api/v1/contentment/data/assemblies';
};

export type GetAssembliesDataErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetAssembliesDataError = GetAssembliesDataErrors[keyof GetAssembliesDataErrors];

export type GetAssembliesDataResponses = {
    /**
     * OK
     */
    200: Array<DataListItem>;
};

export type GetAssembliesDataResponse = GetAssembliesDataResponses[keyof GetAssembliesDataResponses];

export type GetEnumsDataData = {
    body?: never;
    path?: never;
    query?: {
        assembly?: string;
    };
    url: '/umbraco/management/api/v1/contentment/data/enums';
};

export type GetEnumsDataErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetEnumsDataError = GetEnumsDataErrors[keyof GetEnumsDataErrors];

export type GetEnumsDataResponses = {
    /**
     * OK
     */
    200: Array<DataListItem>;
};

export type GetEnumsDataResponse = GetEnumsDataResponses[keyof GetEnumsDataResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:21185' | (string & {});
};